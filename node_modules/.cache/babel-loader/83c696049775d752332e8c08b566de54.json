{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \" Job Details Page \", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  key: 1\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", null, \" Loading job details... \", -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = [_hoisted_4];\nexport function render(_ctx, _cache) {\n  return _ctx.job ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"p\", null, \" The job id is \" + _toDisplayString(_ctx.id), 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", null, _toDisplayString(_ctx.job.details), 1\n  /* TEXT */\n  )])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _hoisted_5));\n}","map":{"version":3,"mappings":";;;;;gCAEEA,oBAA2B,IAA3B,EAA2B,IAA3B,EAAI,oBAAJ,EAAsB;AAAA;AAAtB;;;;;;gCAKIA,oBAA+B,GAA/B,EAA+B,IAA/B,EAAG,0BAAH,EAA2B;AAAA;AAA3B;;oBAAAC;;SANOC,0BAAXC,oBAIO,KAJP,EAIOC,UAJP,EAIO,CAHPC,UAGO,EAFPL,oBAA+B,GAA/B,EAA+B,IAA/B,EAAG,oBAAeM,iBAAGJ,OAAH,CAAlB,EAAuB;EAAA;EAAvB,CAEO,EADPF,oBAA0B,GAA1B,EAA0B,IAA1B,EAA0BM,iBAAnBJ,SAAIK,OAAe,CAA1B,EAAkB;EAAA;EAAlB,CACO,CAJP,oBAKCJ,oBAEQ,KAFR,EAEQK,UAFR,EAEQC,UAFR","names":["_createElementVNode","_hoisted_4","_ctx","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","details","_hoisted_3","_hoisted_5"],"sourceRoot":"","sources":["/home/accesss/Desktop/Vue3/ninja-jobs/src/views/jobs/JobDetails.vue"],"sourcesContent":["<template>\n  <div v-if=\"job\">\n  <h1> Job Details Page </h1>\n  <p> The job id is {{ id }} </p>\n  <p> {{ job.details }} </p>\n   </div>  \n   <div v-else>\n      <p> Loading job details... </p>\n     </div>\n</template>\n\n<script>\n\nexport default {\n    props: ['id'],\n    data() {\n      return {\n        job: null\n      }\n    },\n    mounted: {\n      fetch('http://localhost:3000/jobs' + this.id)\n    .then(res => res.json() )\n    .then(data => this.job = data)\n    .catch(err => console.log(err.message))\n    }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}